---
interface Props {
  name: string;
  id: string;
}

import { Icon } from "astro-icon/components";

const { name, id } = Astro.props;
---

<div class="app-card" id={id}>
  <h2>{name}</h2>
  <img
    src="/fossifyorg.github.io/screen-shot.jpg"
    alt="screenshot"
    width="220px"
    height="400px"
  />
  <div class="details">
    <div class="general">
      <p>
        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Cumque
        voluptates alias deleniti odio nesciunt
      </p>
    </div>

    <div class="features">
      <h3>Top Features</h3>
      <ul>
        <li>Feature one</li>
        <li>Feature two</li>
        <li>Feature three</li>
        <li>Feature four</li>
      </ul>
    </div>
  </div>
  <div class="links">
    <a href=""><Icon name="store_badge" width={120} height={35} /></a>
    <a href=""><Icon name="fdroid_badge" width={120} height={35} /></a>
    <a href=""><Icon name="github_badge" width={120} height={35} /></a>
  </div>
  <div class="open-dialog-btn">
    <button id={`open-dialog-${id}`}>Read more</button>
  </div>
  <dialog id={`dialog-${id}`}>
    <div>
      <div class="general">
        <h2>{name}</h2>
        <p>
          Lorem ipsum dolor sit, amet consectetur adipisicing elit. Cumque
          voluptates alias deleniti odio nesciunt
        </p>
      </div>

      <div class="features">
        <h3>Top Features</h3>
        <ul>
          <li>Feature one</li>
          <li>Feature two</li>
          <li>Feature three</li>
          <li>Feature four</li>
        </ul>
      </div>
      <button id={`close-dialog-${id}`} autofocus>Close</button>
    </div>
  </dialog>
</div>

<script>
  document.addEventListener("astro:page-load", () => {
    const apps = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13].map((item) => {
      const id = `app-${item}`;
      return {
        dialog: document.getElementById(`dialog-${id}`),
        close: document.getElementById(`close-dialog-${id}`),
        open: document.getElementById(`open-dialog-${id}`),
      };
    });

    console.log(apps);

    apps.forEach((app) => {
      app.open?.addEventListener("click", () => {
        app.dialog?.showModal();
      });
      app.close?.addEventListener("click", () => {
        app.dialog?.close();
      });
    });
  });
</script>

<style>
  .app-card {
    scroll-snap-align: center;
    display: grid;
    grid-template-areas: "title title" "screen details" "screen links";
    grid-template-columns: 14em 16em;
    max-width: 28em;
    gap: 1rem;
    position: relative;
  }

  .app-card > h2 {
    grid-area: title;
    font-size: var(--fs-sm);
    font-weight: 600;
    text-align: center;
    text-transform: capitalize;
  }

  .app-card > img {
    grid-area: screen;
    min-width: 100%;
    height: auto;
    object-fit: contain;
    border-radius: 0.5rem;
  }

  .details {
    grid-area: details;
    display: grid;
    justify-items: start;
    align-content: end;
    gap: 1rem;
  }

  @media (width < 40em) {
    .app-card {
      grid-template-areas: "title" "screen" "links" "open-dialog-btn";
      grid-template-columns: 20em;
      max-width: 20em;
      gap: 0.5rem;
    }
    .details {
      display: none;
    }
  }

  .general,
  .features {
    display: grid;
    gap: 1rem;
  }

  .general > p {
    max-width: 20ch;
    text-align: justify;
    -webkit-hyphens: auto;
    -moz-hyphens: auto;
    -ms-hyphens: auto;
    hyphens: auto;
  }

  .general > h2 {
    font-size: var(--fs-sm);
    font-weight: 600;
    text-align: center;
    text-transform: capitalize;
  }

  .features > h3 {
    font-weight: 600;
    text-align: start;
  }

  .features > ul {
    display: grid;
    justify-items: start;
    padding-inline-start: 2rem;
  }

  .links {
    grid-area: links;
    display: grid;
    align-items: center;
    gap: 0.5rem;
  }

  @media (width < 40em) {
    .links {
      grid-auto-flow: column;
    }
  }

  [data-icon="fdroid_badge"] {
    color: black;
  }

  [data-icon="github_badge"] {
    color: black;
  }

  .open-dialog-btn {
    display: none;
  }

  @media (width < 40em) {
    .open-dialog-btn {
      display: block;
      grid-area: open-dialog-btn;
      place-self: center;
      width: 100%;
    }

    .open-dialog-btn > button {
      background-color: var(--primary-container);
      color: var(--on-primary-container);
      border: solid 1px var(--outline-variant);
      border-radius: 0.5rem;
      width: 100%;
      padding-block: 0.5rem;
      cursor: pointer;
    }
  }

  dialog {
    position: fixed;
    width: max-content;
    inset: 0;
    margin: auto;
    padding: 3rem;
    border: solid 1px var(--outline);
    background-color: var(--surface-container);
    border-radius: 0.5rem;
  }

  dialog > div {
    grid-area: details;
    display: grid;
    place-content: center;
    gap: 1rem;
  }

  dialog button {
    margin-block-start: 1rem;
    background: var(--primary-container);
    color: var(--on-primary-container);
    padding-inline: 1rem;
    padding-block: 0.2rem;
    border: solid 1px var(--outline-variant);
    border-radius: 0.5rem;
    cursor: pointer;
    justify-self: end;
  }
</style>
